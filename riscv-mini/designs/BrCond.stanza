#use-syntax(core, chipper)

defpackage BrCond :
   import core
   import verse
   import chipper
   import Params
   import Control

public defmodule BrCond :
  input  rs1     : UInt<instLen>
  input  rs2     : UInt<instLen>
  input  br_type : UInt<3>
  output taken   : Bool

  node eq   = rs1 === rs2
  node neq  = ! eq
  node lt   = to-sint(rs1) < to-sint(rs2)
  node ge   = ! lt
  node ltu  = rs1 < rs2
  node geu  = ! ltu
  taken :=     
    ((br_type === BR_EQ) && eq) ||
    ((br_type === BR_NE) && neq) ||
    ((br_type === BR_LT) && lt) ||
    ((br_type === BR_GE) && ge) ||
    ((br_type === BR_LTU) && ltu) ||
    ((br_type === BR_GEU) && geu)

