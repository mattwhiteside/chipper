#use-syntax(core, chipper)

defpackage decoupled :
   import core
   import verse
   import chipper
   import stdlib

;What are these for?
;public defn fired<?T> (d: ValidIO<?T>) -> Bool : d.valid
;public defn fired<?T> (d: DecoupledIO<?T>) -> Bool : d.ready && d.valid



;TODO: What is this supposed to do?
;;; Generic hardware queue. Required parameter entries controls
;;;  the depth of the queues. The width of the queue is determined
;;;  from the inputs.
;;;
;;;  Example usage:
;;;    val q = new Fifo(UInt(), 16)
;;;    q.io.enq <> producer.io.out
;;;    consumer.io.in <> q.io.deq
;public defn FifoOf<?T> (enq: DecoupledIO<?T & Data>) -> DecoupledIO<T> : FifoOf(enq, 2)
;public defn FifoOf<?T> (enq: DecoupledIO<?T & Data>, entries: Int) -> DecoupledIO<T> : FifoOf(enq, entries, false)
;public defn FifoOf<?T> (enq: DecoupledIO<?T & Data>, entries: Int, pipe: True|False) -> DecoupledIO<T> :
;  inst q of Fifo(enq.bits, entries, pipe, false)
;  q.enq.valid := enq.valid ;; not using <> so that override is allowed
;  q.enq.bits  := enq.bits
;  enq.ready   := q.enq.ready
;  q.deq
