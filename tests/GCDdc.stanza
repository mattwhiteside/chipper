;See License.txt for details about licensing.

#use-syntax(core, chipper)

defpackage gcd :
   import core
   import collections
   import chipper
   import stdlib
   import decoupled

defmodule GCDdc :
   input  a: DecoupledIO<UInt<16>>
   input  b: DecoupledIO<UInt<16>>
   output z: DecoupledIO<UInt<16>>

   reg computing? = UInt(false)
   reg x: UInt<16>
   reg y: UInt<16>
   when computing? :
     when x > y :
       x := x - y
     else :
       y := y - x
     wire done?  = y === UInt(0)
     computing? := ! done? | ! z.ready
     z.bits     := x
     z.valid    := done?
   else when a.valid & b.valid :
     x := a.bits
     y := b.bits
     computing? := UInt(true)

defn main () :
   circuit c : GCDdc
   println(c)
   
main()
