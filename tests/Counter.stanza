#include("src/chipper.stanza")

#use-syntax(core, chipper)

defpackage counter :
   import core
   import verse
   import chipper

public defn wrapAround (n: UInt, max: UInt) -> UInt :
  Mux(n > max, UInt(0), n)

public defn counter (max: UInt, en: Bool, amt: UInt) -> UInt :
  reg x : UInt<width(max)> = UInt(0)
  when en : x := wrapAround(x + amt, max)
  x

defmodule Counter (max:Int) :
  input inc: Bool
  input amt: UInt<sizeof(max)>
  output tot: UInt<sizeof(max)>

  tot := counter(UInt(max), inc, amt)
  ;; reg x: UInt<sizeof(max)> x := UInt(0)
  ;; when inc : x := wrapAround(x + amt, UInt(max))
  ;; tot := x

defn main () :
   circuit c of Counter(16)
   println(c)
   
main()
