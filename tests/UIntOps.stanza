#include("src/firrtl-ir.stanza")
#include("src/ir-utils.stanza")
#include("src/chipper.stanza")

#use-syntax(core, chipper)

defpackage uintops :
   import core
   import verse
   import chipper

defmodule UIntOps :
  input a : UInt<16>
  input b : UInt<16>
  output addout : UInt<16>
  output subout : UInt<16>
  output timesout : UInt<16>
  output divout : UInt<16>
  output modout : UInt<16>
  output lshiftout : UInt<16>
  output rshiftout : UInt<16>
  output lessout : Bool
  output greatout : Bool
  output eqout : Bool
  output noteqout : Bool
  output lesseqout : Bool
  output greateqout : Bool

  addout     := a + b
  subout     := a - b
  timesout   := (a * b)[15, 0]
  divout     := a / Mux(b === UInt(0), UInt(1), b)
  ;; modout  := a % b
  ;; TODO: 
  modout     := UInt(0)
  lshiftout  := (a << b[3, 0])[15, 0]
  rshiftout  := a >> b
  lessout    := a < b
  greatout   := a > b
  eqout      := a === b
  noteqout   := (a !== b)
  lesseqout  := a <= b
  greateqout := a >= b

defn main () :
   circuit c of UIntOps()
   println(c)

main()
